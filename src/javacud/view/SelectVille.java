/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package javacud.view;

import java.sql.Connection;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javacrud.control.VilleDAO;
import java.util.HashMap;
import javacrud.model.Commune;
/**
 *
 * @author s.lussiez
 */
public class SelectVille extends javax.swing.JDialog {
    private boolean selected;
    private Commune selectedVille;
    HashMap<Integer, Commune> ville = new HashMap<Integer, Commune>();
    VilleDAO villeDao = new VilleDAO();
    
    /**
     * Creates new form SelectVille
     */
    public SelectVille(javax.swing.JFrame parent, boolean modal, String numPost, String codePost) {
        super(parent, modal);
        initComponents();
        this.selected = false;
        this.selectedVille = new Commune(codePost, numPost, "");
        ville.clear();
        ville = villeDao.villesPourCp(codePost);
        chargerTableauVille();
    }
    
    private void chargerTableauVille(){
        DefaultTableModel uiTable = (DefaultTableModel)TableVille.getModel();
        int j = uiTable.getRowCount();
        for (int i = j-1; i>=0 ; i--){
            uiTable.removeRow(i);
        }
        for (Integer codePost : ville.keySet()) {
            Commune uneVille = ville.get(codePost);
            Object[] row = new Object[2];
            row[0] = uneVille.getNum_Postal();
            row[1] = uneVille.getNom_Commune();
            
        
            uiTable.addRow(row);        
        }
    }
    
    public void changerSelectVille(){
        //pointer sur la colonne sélectionnée
        int i = TableVille.getSelectedRow();
        //récupérer les données utilisateurs
        //utiliser les données du tableau ou ...        
    }
    
    public boolean isSelected(){
        return this.selected;
    }
    
    public Commune getSelectedVille(){
        return this.selectedVille;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableVille = new javax.swing.JTable();
        Valider = new javax.swing.JButton();
        Retour = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(443, 306));
        setMinimumSize(new java.awt.Dimension(443, 306));
        setModal(true);
        getContentPane().setLayout(null);

        TableVille.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Numéro", "Sélectionnez une commune"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TableVille);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 40, 640, 560);

        Valider.setText("Valider");
        Valider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ValiderMouseClicked(evt);
            }
        });
        getContentPane().add(Valider);
        Valider.setBounds(100, 630, 65, 23);

        Retour.setText("Retour");
        getContentPane().add(Retour);
        Retour.setBounds(550, 630, 65, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ValiderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ValiderMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ValiderMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectVille.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectVille.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectVille.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectVille.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SelectVille dialog = new SelectVille(new javax.swing.JFrame(), true, "0", "0");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Retour;
    private javax.swing.JTable TableVille;
    private javax.swing.JButton Valider;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
